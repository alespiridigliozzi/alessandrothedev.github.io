{"version":3,"sources":["components/AboutSection/AboutSection.jsx","components/ContactSection/ContactSection.jsx","components/Button/Button.jsx","data/ProjectsData.js","components/ProjectCard/ProjectCard.jsx","components/FeaturedProjects/FeaturedProjects.jsx","pages/Projects/Projects.jsx","components/Footer/Footer.jsx","components/Header/Header.jsx","components/NavBar/NavBar.jsx","components/ScrollToTop/ScrollToTop.jsx","pages/ProjectDetails/ProjectDetails.jsx","components/IntroOverlay/IntroOverlay.jsx","App.js","reportWebVitals.js","index.js"],"names":["AboutSection","className","ContactSection","href","target","Button","props","buttonText","dataOs","ProjectData","id","title","image","techStack","demo","github","p1","p2","p3","p4","ProjectCard","src","alt","FeaturedProjects","projectsList","map","project","to","Projects","Footer","Header","NavBar","ScrollToTop","location","useLocation","useEffect","window","scrollTo","children","ProjectDetails","projectID","useParams","singleProject","filter","tech","IntroOverlay","App","gsap","duration","css","visibility","timeline","from","delay","y","skewY","ease","stagger","amount","onStart","document","querySelector","classList","add","height","display","onComplete","remove","getElementById","style","zIndex","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.63217001.chunk.js","sourcesContent":["import React from 'react'\nimport \"./AboutSection.scss\"\n\nconst AboutSection = () => {\n\n    return (\n        <section className=\"about-section\">\n\n            <p className=\"about-section__text firstP\">\n            Ciao! I'm <b>Alessandro</b>, a London-based, Italian Software Engineer with a passion for <em><b>clean, minimalist design</b></em>.</p>\n\n            <p className=\"about-section__text\">\n            I fell in love with web development &#38; design when I was just 12 years-old and I started building web pages using a software called <em>Microsoft FrontPage</em>.</p>\n\n            <p className=\"about-section__text\">\n            During my university years, I had to put web development aside, but since I moved to London in 2016, the urge to start coding again became stronger and stronger, until there was nothing else I could think about!</p>\n\n            <p className=\"about-section__text\">\n            My tech stack includes:<br/> \n            <em>HTML / CSS / SASS / SCSS / JAVASCRIPT / REACT /\n            GSAP / GITHUB / GIT / JAVA / MYSQL / FIGMA / ADOBE XD</em></p>\n\n        </section>\n    )\n}\n\nexport default AboutSection\n","import React from 'react'\nimport \"./ContactSection.scss\"\n\nconst ContactSection = () => {\n\n    return (\n        <section className=\"contact-section\">\n\n            <h2 className=\"contact-section__text\">Want to get in touch? <a className=\"contact-section__text--link\" href=\"mailto:spiridigliozzi.alessandro@gmail.com\">Send me an email</a></h2>\n            \n            <h2 className=\"contact-section__text\">Or connect with me on <a href=\"https://www.linkedin.com/in/alessandrospiridigliozzi/\" target=\"_blank\" className=\"contact-section__text--link\">LinkedIn</a> or <a href=\"https://github.com/alessandrothedev\" target=\"_blank\" className=\"contact-section__text--link\">Github</a></h2>\n\n        </section>\n    )\n}\n\nexport default ContactSection\n","import React from 'react'\nimport \"./Button.scss\"\n\nconst Button = (props) => {\n\n    const { buttonText, dataOs } = props\n\n    return (\n        <button className=\"button\">{buttonText}</button>\n    )\n}\n\nexport default Button\n","export const ProjectData = [\n    {\n        id: \"punk-api\",  \n        title: \"BrewDog Punk Api - React\",\n        image: \"https://github.com/alexsp92/calculator/raw/main/js-calculator.png\",\n        techStack: ['Html', 'Css', 'Scss', 'JavaScript', 'React'],\n        demo: \"https://alessandrothedev.github.io/calculator/\",\n        github: \"https://github.com/alessandrothedev/calculator\",\n        p1: \"\",\n        p2: \"\",\n        p3: \"\",\n        p4: \"\"\n    },\n    {\n        id: \"js-calculator\",    \n        title: \"JavaScript Calculator\",\n        image: \"https://github.com/alexsp92/calculator/raw/main/js-calculator.png\",\n        techStack: ['Html', 'Css', 'Scss', 'JavaScript'],\n        demo: \"https://alessandrothedev.github.io/calculator/\",\n        github: \"https://github.com/alessandrothedev/calculator\",\n        p1: `This JavaScript Calculator was designed with a mobile-first approach, using a css-grid layout and styled using the Glass Morphism design trend.`,\n        p2: `The calculator consists of a display section where the user will be able to see the operations and their result. The values of the user's input will be stored in two variables with empty arrays as defaults. A 3rd variable will store the value for the operator and a 4th variable will determine if the 1st array has been filled.`,\n        p3: `An EventListener, followed by an if statement function was set up, so that the values of the buttons will be pushed into the first variable array, using array.push() until the user selects one of the 7 operators. Once a user has selected an operator, the variable isFirstOperandFilled will be set to false, causing every other value from the following buttons' inputs to be pushed into our second array variable.`,\n        p4: `A Switch statement will evaluate different case scenarios and based on that, different mathematical operations will be performed.`\n    },\n    {\n        id: \"morse-code\",  \n        title: \"JavaScript Morse Decoder\",\n        image: \"https://raw.githubusercontent.com/alessandrothedev/morsecode/main/morsedecoder1.png\",\n        techStack: ['Html', 'Css', 'Scss', 'JavaScript'],\n        demo: \"https://alessandrothedev.github.io/morsecode/\",\n        github: \"https://github.com/alessandrothedev/morsecode\",\n        p1: \"The Morse Code translator was designed with a mobile-first approach, using a css-grid layout.\",\n        p2: \"Built in JavaScript. The user will type the sentence in the English language textarea and we will get the translation in morse code in the second textarea. We will use an object with all the letters, numbers and symbols as the Object's keys, and their corresponding morse codes as the Object's values.\",\n        p3: `To display the result, we use a function translate() that will store the inputs' values inside a variable and will then map the variable and return the Object's values for each key that matches the user input. If a character/key is invalid, it will output \"?\".`,\n        p4: `The user can play the morse code in their browser by pressing the Play button. This was done using a library called morseSynth by netAction.`\n    },\n    {\n        id: \"js-trivia-quiz\",  \n        title: \"JavaScript Trivia Quiz\",\n        image: \"https://github.com/alessandrothedev/quiz/raw/main/jstriviapreview.png\",\n        techStack: ['Html', 'Css', 'Scss', 'JavaScript'],\n        demo: \"https://alessandrothedev.github.io/quiz/\",\n        github: \"https://github.com/alessandrothedev/quiz\",\n        p1: \"This JavaScript Trivia Quiz was designed with a mobile-first approach, using a css-grid & flexbox.\",\n        p2: `The quiz uses an Object array where we store our data i.e. our questions. Each question is an object with keys of Question, an array of answers. Each answer array contains 4 different objects where we store our answers, and we use a key correct with a value of true for the correct answer and false for the remaining answers.`,\n        p3: `The questions are shuffled using the .sort() and Math.random() methods, so that each time the user plays, the order of the questions displayed will change.`,\n        p4: \"\"\n    }\n];\n","import React from 'react'\nimport \"./ProjectCard.scss\"\n\nconst ProjectCard = ({title, image}) => {\n\n    return (\n        <div className=\"project-card\">\n            <h2 className=\"project-card__title\">{title}</h2>\n            <div className=\"project-card__img-container\">\n                <img src={image} alt={title} className=\"project-card__img\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectCard\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from '../Button/Button'\nimport { ProjectData } from '../../data/ProjectsData'\nimport ProjectCard from '../ProjectCard/ProjectCard'\nimport \"./FeaturedProjects.scss\"\n\nconst FeaturedProjects = () => {\n\n    const projectsList = ProjectData.map(project => {\n        return (\n            <Link to={`/project/${project.id}`} key={project.title}>\n                <ProjectCard title={project.title} image={project.image}/>\n            </Link>\n        )\n    })\n\n    return (\n        <section className=\"featured-projects\">\n\n            <div className=\"featured-projects-grid\">\n                {projectsList}\n            </div>\n\n            <Link to=\"/projects\">\n                <Button buttonText=\"See More Projects\"/>\n            </Link>\n            \n        </section>\n    )\n}\n\nexport default FeaturedProjects\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ProjectData } from '../../data/ProjectsData'\nimport ProjectCard from '../../components/ProjectCard/ProjectCard'\nimport \"./Projects.scss\"\n\nconst Projects = () => {\n\n    const projectsList = ProjectData.map(project => {\n        return (\n            <Link to={`/project/${project.id}`} key={project.title}>\n                <ProjectCard title={project.title}/>\n            </Link>\n        )\n    })\n\n    return (\n        <div className=\"projects-page\">\n\n            <h2 className=\"projects-page__headline\">Projects I've Worked On</h2>\n\n            <div className=\"projects-page-grid\">\n                {projectsList}\n            </div>\n\n            <p className=\"projects-page__cta\">Liked any of my projects and want to know more about them?<br /> Feel free to <a href=\"mailto:spiridigliozzi.alessandro@gmail.com\">drop me a message</a> or check out my CV.</p>\n        </div>\n    )\n}\n\nexport default Projects\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"./Footer.scss\"\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"footer__logo\"><Link to=\"/\">Alessandro</Link></div>\n            <div className=\"footer__links\">\n                <a href=\"mailto:spiridigliozzi.alessandro@gmail.com\">Email</a> / <a href=\"https://www.linkedin.com/in/alessandrospiridigliozzi/\" target=\"_blank\">LinkedIn</a> / <a href=\"https://github.com/alessandrothedev\" target=\"_blank\">Github</a>\n                </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport \"./Header.scss\"\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n\n            <h1 className=\"header__headline\">\n                <div className=\"header__title\">\n                    <span>There is beauty</span>\n                </div>\n                <div className=\"header__title\">\n                    <span>in <span className=\"header__title--italic\">simplicity</span>.</span>\n                </div>\n            </h1>\n\n            <div className=\"header__scroll-down\">\n                <p className=\"header__scroll-down--p\">Scroll Down</p>\n                <span className=\"header__scroll-down--bar\"></span>\n            </div>\n\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport \"./NavBar.scss\"\n\nconst NavBar = () => {\n    return (\n        <div id=\"navbar-container\">\n            <nav className=\"navbar\">\n                <Link to=\"/\"><span className=\"navbar__logo\">Alessandro</span></Link>\n            </nav>\n        </div>\n    )\n}\n\nexport default NavBar\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\n\nconst ScrollToTop = (props) => {\n\n  const location = useLocation();\n  \n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return <>{props.children}</>\n};\n\nexport default ScrollToTop;\n","import React from 'react'\nimport { useParams } from 'react-router'\nimport \"./ProjectDetails.scss\"\nimport { ProjectData } from '../../data/ProjectsData'\n\nconst ProjectDetails = (props) => {\n\n    const { projectID } = useParams()\n\n    const myProjects = ProjectData.filter(project => {\n        return project.id == projectID;\n    })\n\n    const singleProject = myProjects[0]\n\n    return (\n        <div className=\"project-details\">\n\n            <div className=\"project-details__img\">\n                <img src={singleProject.image} alt=\"\" />\n            </div>\n\n            <h2>{singleProject.title}</h2>\n\n            <div className=\"project-details__links\">\n                <a href={singleProject.demo} target=\"_blank\" className=\"project-details__link\">Live Demo <i className=\"fas fa-external-link-alt\"></i></a>\n                <a href={singleProject.github} target=\"_blank\" className=\"project-details__link\">Source Code <i className=\"fas fa-code\"></i></a>\n            </div>\n\n            <div className=\"project-details__techStack\">\n                <h3>Tech Stack Used:</h3>\n                <ul className=\"project-details__techStack--list\">\n                    {singleProject.techStack.map(tech => {\n                        return <li className=\"project-details__techStack--item\">{tech}</li>\n                    })}\n                </ul>\n            </div>\n\n            <div className=\"project-details__description\">\n                <h3>The Project:</h3>\n                <p>{singleProject.p1}</p>\n                <p>{singleProject.p2}</p>\n                <p>{singleProject.p3}</p>\n                <p>{singleProject.p4}</p>\n            </div>\n\n            \n        </div>\n    )\n}\n\nexport default ProjectDetails\n","import React from 'react'\nimport \"./IntroOverlay.scss\"\n\nconst IntroOverlay = () => {\n    return (\n        <div className=\"intro-overlay\">\n            <div className=\"top\">\n                <div className=\"overlay-top\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default IntroOverlay\n","import './App.css';\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { gsap } from \"gsap\";\nimport AboutSection from './components/AboutSection/AboutSection';\nimport ContactSection from './components/ContactSection/ContactSection';\nimport FeaturedProjects from './components/FeaturedProjects/FeaturedProjects';\nimport Projects from \"./pages/Projects/Projects\";\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport NavBar from './components/NavBar/NavBar';\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop';\nimport ProjectDetails from './pages/ProjectDetails/ProjectDetails';\nimport IntroOverlay from './components/IntroOverlay/IntroOverlay';\n\nfunction App() {\n\n    useEffect(() => {\n        gsap.to('body', {\n            duration: 0,\n            css: {\n                visibility: \"visible\"\n            }\n        })\n\n        const tl = gsap.timeline()\n\n        tl.from(\".header__title\", {\n            delay: 0.5,\n            y: 350, \n            duration: 2,\n            skewY: 7,\n            ease: \"power4.out\",\n            stagger: {\n                amount: 0.3\n            },\n            onStart: () => {\n                document.querySelector('.content').classList.add('hidden')\n                document.querySelector('.footer-content').classList.add('hidden')\n            }\n        }).to('.overlay-top', {\n            duration: 1.6,\n            height: 0,\n            ease: 'expo.inOut',\n            stagger: {\n                amount: 0.4\n            }\n        }).to('.intro-overlay', {\n            duration: 0,\n            css: {\n                display: 'none'\n            },\n            onComplete: () => {\n                document.querySelector('.content').classList.remove('hidden')\n                document.querySelector('.footer-content').classList.remove('hidden')\n                document.getElementById('navbar-container').style.zIndex = '15'\n            }\n        })\n    }, [])\n      \n    return (\n    <Router>\n        <IntroOverlay />\n        <div className=\"App\">\n            <NavBar />\n                <ScrollToTop>\n                    <Switch>\n                        <Route exact path=\"/projects\">\n                            <Projects />\n                        </Route>\n                        <Route exact path=\"/project/:projectID\">\n                            <ProjectDetails />\n                        </Route>\n                        <Route exact path=\"/\">\n                            <Header />\n                            <div className=\"content\">\n                                <AboutSection />\n                                <FeaturedProjects />\n                                <ContactSection />\n                            </div>\n                        </Route>   \n                    </Switch>   \n                </ScrollToTop>      \n            <div className=\"footer-content\">          \n                <Footer />\n            </div>\n        </div>\n    </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}